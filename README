# CSC10009 - Computer System

This repository contains the source code for the CSC10009: Computer System course at VNUHCM - University of Science.

## Course Description

This course provides an introduction to computer systems by exploring the design and implementation of a minimal Unix-like operating system, xv6.  xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix Version 6 (v6). It adheres closely to the structure and style of v6, but is implemented for a modern RISC-V multiprocessor architecture using ANSI C.

## Learning Objectives
- Gain a fundamental understanding of core operating system concepts such as memory management, process scheduling, file systems, and device drivers.
- Explore the design principles and trade-offs involved in operating system implementation.
- Develop practical skills in writing system-level code in C.

## Acknowledgements
The xv6 project draws inspiration from John Lions's Commentary on UNIX 6th Edition (Peer to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14, 2000)) and leverages resources from MIT's 6.1810 course (https://pdos.csail.mit.edu/6.1810/).

I extend my gratitude to the following individuals who have contributed to xv6's development:

- Russ Cox (context switching, locking)
- Cliff Frey (MP)
- Xiao Yu (MP)
- Nickolai Zeldovich
- Austin Clements
I'm also thankful for the valuable bug reports and patches provided by a vast community of contributors.

## Getting Started
To set up a development environment for xv6, you will need:

A RISC-V "newlib" toolchain (https://github.com/riscv/riscv-gnu-toolchain)
Qemu compiled for riscv64-softmmu
Once you have installed these tools and ensured they are accessible in your shell search path, you can build xv6 using the following command:

Bash

make qemu
This will create an xv6 bootable image that you can execute within the Qemu emulator.

## License
The code within the xv6 source files is copyrighted under the following license:

Copyright 2006-2022 Frans Kaashoek, Robert Morris, and Russ Cox.
